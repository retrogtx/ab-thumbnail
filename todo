I am aiming to create an A/B testing app for YouTube thumbnails before the video goes live by allowing external users to vote on which thumbnail is more appealing. This allows content creators to choose the best thumbnail based on real audience feedback before publishing the video.

Concept:
An app where YouTubers can upload thumbnail variations for their upcoming videos and generate a poll link to gather feedback from their audience or a random external audience. The feedback is used to determine the most engaging thumbnail before the video goes live.

Thumbnail Upload:

Users can upload two or more thumbnails they want to test for an upcoming video.
Each thumbnail is displayed in a side-by-side or carousel format for comparison.
Option to add a brief description or context for the thumbnails (e.g., video title, key theme).

Poll Generation:
Once thumbnails are uploaded, users can create a poll that compares the options.
Generate a public link that can be shared with friends, followers, or embedded on websites or social media platforms.
The poll displays the thumbnail images side by side with a simple voting option for external users to select the one they like the most.
Option to allow voters to leave comments on why they chose a specific thumbnail.

Voting & Poll Interaction:
Users can vote on their preferred thumbnail without needing to sign up, making it frictionless for respondents.
Voting can be anonymous or authenticated based on the creator’s preferences (e.g., “Only logged-in users can vote” or “Allow public voting”).

Results Dashboard:
After the poll ends, creators can access a simple dashboard showing:
Percentage of votes for each thumbnail.
Total number of votes.
Comments from voters (if enabled).
Results are displayed visually with pie charts, bar charts, or just simple percentage values.

Sharing Poll Results:
Allow creators to download or share the poll results with their team or collaborators.

User Flow:

Login & Setup:
Users sign in with their account (Google or email) and are prompted to upload thumbnails they want to test.
They set up a poll, input basic details (like video title), and generate the poll link.
Sharing Poll:

The user shares the poll link across their social media channels, communities, or even among their YouTube subscribers.

Vote Collection:
The app collects votes from anyone with the poll link. Votes are recorded in real-time and updated on the results dashboard.

Analyzing Results:
Once the voting period ends, the user sees which thumbnail performed best and can confidently choose it before uploading the video on YouTube.

Simple UI Design:

Dashboard:
Thumbnail Upload Section: Drag-and-drop interface for uploading multiple thumbnail variations.
Poll Generation Button: Button to generate a shareable poll link after the thumbnails are uploaded.
Active Polls: List of active polls with stats (e.g., number of votes so far, percentage breakdown).

Poll Page (External User View):
Thumbnail Display: Two (or more) thumbnails displayed side by side.
Voting Interface: Simple voting buttons under each thumbnail (e.g., "Choose Thumbnail A" or "Choose Thumbnail B").
Optional Comments: Text field for voters to explain their choices (if the creator enabled comments).
Results Page:
Votes Summary: Bar or pie chart displaying the vote breakdown between thumbnails.
Comments Display: Section showing any comments left by voters explaining their choice.

Tech Stack:
Frontend: Next.js for building the interface, with Tailwind CSS for responsive and clean design.
Backend: Next.js API routes to handle thumbnail uploads, vote tracking, and poll management.
Database: PostgreSQL for storing thumbnails, poll data, and voting results. We are using prisma as the ORM.
Storage: Use Supabase for storing the uploaded thumbnails.
Authentication: Use NextAuth for secure login, and Google OAuth for authentication.
Sharing Mechanism: The app generates unique poll links for users to share externally.


please implement the polling part for anonymous users. we have succesfully implemented the code that uploads the two images required for a poll to supabase.